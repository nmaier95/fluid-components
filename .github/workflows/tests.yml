name: tests

on: [push, pull_request]

jobs:
    lint:
        name: Source code linting
        runs-on: ubuntu-24.04
        strategy:
            max-parallel: 2
            matrix:
                php-versions: ['8.2']
        steps:
            -   name: "Checkout"
                uses: actions/checkout@v4

            -   name: Validate composer.json
                run: Build/Scripts/runTests.sh -s composer validate

            -   name: Cache dependencies installed with composer
                uses: actions/cache@v4
                with:
                    key: "php${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
                    path: .cache/composer
                    restore-keys: "php${{ matrix.php-version }}-composer-\n"

            -   name: Install composer dependencies
                run: Build/Scripts/runTests.sh -s composer install

            -   name: PHP Linting
                run: Build/Scripts/runTests.sh -s lintPhp

            -   name: Editorconfig Linting
                run: Build/Scripts/runTests.sh -s lintEditorconfig


    unittest:
        runs-on: ubuntu-24.04
        strategy:
            max-parallel: 2
            matrix:
                php-versions: ['8.2', '8.3']
                typo3-versions: ['13.4', '12.4']
                composer-requirements: ['Min', 'Max']
                exclude:
                    - typo3-versions: '13.4'
                      composer-requirements: 'Max'

        name: Unit (PHP ${{ matrix.php-versions }}, TYPO3 ${{ matrix.typo3-versions }}, Req ${{ matrix.composer-requirements }})
        steps:
            -   name: "Checkout"
                uses: actions/checkout@v4

            -   name: Validate composer.json
                run: Build/Scripts/runTests.sh -s composer validate

            -   name: Cache dependencies installed with composer
                uses: actions/cache@v4
                with:
                    key: "php${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
                    path: .cache/composer
                    restore-keys: "php${{ matrix.php-version }}-composer-\n"

            -   name: Install composer dependencies
                run: Build/Scripts/runTests.sh -p ${{ matrix.php-versions }} -t ${{ matrix.typo3-versions }} -s composerUpdate${{ matrix.composer-requirements }}

            -   name: Automated Unit Testing
                run: Build/Scripts/runTests.sh -s unit


    functional:
        runs-on: ubuntu-24.04
        strategy:
            max-parallel: 2
            matrix:
                php-versions: ['8.2', '8.3']
                typo3-versions: ['13.4', '12.4']
                composer-requirements: ['Min', 'Max']
                exclude:
                    - typo3-versions: '13.4'
                      composer-requirements: 'Max'

        name: Functional (PHP ${{ matrix.php-versions }}, TYPO3 ${{ matrix.typo3-versions }}, Req ${{ matrix.composer-requirements }})
        steps:
            -   name: "Checkout"
                uses: actions/checkout@v4

            -   name: Validate composer.json
                run: Build/Scripts/runTests.sh -s composer validate

            -   name: Cache dependencies installed with composer
                uses: actions/cache@v4
                with:
                    key: "php${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
                    path: .cache/composer
                    restore-keys: "php${{ matrix.php-version }}-composer-\n"

            -   name: Install composer dependencies
                run: Build/Scripts/runTests.sh -p ${{ matrix.php-versions }} -t ${{ matrix.typo3-versions }} -s composerUpdate${{ matrix.composer-requirements }}

            -   name: Automated Unit Testing
                run: Build/Scripts/runTests.sh -s functional
